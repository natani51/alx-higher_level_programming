====================================================================
                                                                   =
Generating Test Cases for ``4-print_square`` module.               =
                                                                   =
====================================================================

Result: The function prints the square based on the value of the
``size`` parameter.

>>> print_square = __import__('4-print_square').print_square
====================================================================
Testing for different valid ``size`` arguments.
====================================================================
>>> print_square(3)
###
###
###

>>> print_square(10)
##########
##########
##########
##########
##########
##########
##########
##########
##########
##########

>>> print_square(1)
#

>>> print_square(0)

>>> print_square(5)
#####
#####
#####
#####
#####

====================================================================
Testing for different non-integer ``size`` arguments.
====================================================================
>>> print_square(3.2)
Traceback (most recent call last):
...
TypeError: size must be an integer

>>> print_square("Nate")
Traceback (most recent call last):
...
TypeError: size must be an integer

>>> print_square({"Name": "Nate", "interest": "Unit Testing"})
Traceback (most recent call last):
...
TypeError: size must be an integer

>>> print_square(None)
Traceback (most recent call last):
...
TypeError: size must be an integer

>>> print_square(0.879)
Traceback (most recent call last):
...
TypeError: size must be an integer
====================================================================
Testing the function with different ``size`` arguments less than 0
====================================================================

>>> print_square(-1)
Traceback (most recent call last):
...
ValueError: size must be >= 0

>>> print_square(-78)
Traceback (most recent call last):
...
ValueError: size must be >= 0

====================================================================
Testing for ``size`` arugment set to negative and less than 0
====================================================================
>>> print_square(-0.78)
Traceback (most recent call last):
...
TypeError: size must be an integer

>>> print_square(-6.9)
Traceback (most recent call last):
...
TypeError: size must be an integer
====================================================================
Testing when no argument is passed to it.
====================================================================
>>> print_square()
Traceback (most recent call last):
...
TypeError: print_square() missing 1 required positional argument: 'size'
