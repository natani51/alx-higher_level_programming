====================================================================
                                                                   =
Generating Test Cases for ``3-say_my_name`` module.                =
                                                                   =
====================================================================

>>> say_my_name = __import__('3-say_my_name').say_my_name
====================================================================
Testing for  valid arguments as ``first_name``and ``second_name``.
====================================================================
>>> say_my_name("Nathaniel", "Demissie")
My name is Nathaniel Demissie

>>> say_my_name("Nate", "Dempsey")
My name is Nate Dempsey

>>> say_my_name("Cory Shafer", "Shafer 33")
My name is Nathaniel Nate Demissie 33
====================================================================
Testing for the second argument being optional.
The argument ``last_name`` is optional
====================================================================
>>> say_my_name("Nate")
My name is Nate

>>> say_my_name("12345")
My name is 12345 
====================================================================
Testing for non-string arguments.
====================================================================
>>> say_my_name(None, "Dempsey")
Traceback (most recent call last):
...
TypeError: first_name must be a string

>>> say_my_name("Cory", 34)
Traceback (most recent call last):
...
TypeError: last_name must be a string

>>> say_my_name(["Nate", "Dempsey"])
Traceback (most recent call last):
...
TypeError: first_name must be a string

>>> say_my_name(12, 34)
Traceback (most recent call last):
...
TypeError: first_name must be a string

Let's test the function by passing no argument. If no argument is passed,
a default TypeError for missing positional argument is raised.

>>> say_my_name()
Traceback (most recent call last):
...
TypeError: say_my_name() missing 1 required positional argument: 'first_name
